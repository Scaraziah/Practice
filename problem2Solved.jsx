
// You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:

// b[0] is equal to a[0];
// b[1] is equal to the last element of a;
// b[2] is equal to a[1];
// b[3] is equal to the second-last element of a;
// b[4] is equal to a[2];
// b[5] is equal to the third-last element of a;
// and so on.
// Your task is to determine whether the new array b is sorted in strictly ascending order or not.

// Here is how the process of generating the new array b works:



// Example

// For a = [1, 3, 5, 6, 4, 2], the output should be solution(a) = true.

// The new array b will look like [1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.

// For a = [1, 4, 5, 6, 3], the output should be solution(a) = false.

// The new array b will look like [1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.

let a = [1, 3, 5, 6, 4, 2]
function newArray(arr) {
    let arrpos = [];
    for ( let i = 0; i < n; i++)
        arrpos.push([arr[i], i]);
        arrpos.sort(function(a,b){
            return a[0]-b[0];
        }); 
    
        let vis = new Array(n);
        for(let i = 0; i < n; i++)
            {
                vis[i] = false
            }
            let ans = 0
        
        for (let i = 0; i< n; i++){
            if (vis[i] || arrpos[i][1] == i)
            continue;
            let cycle_size = 0;
            let j = i;
            while (!vis[j])
            {
                vis[j]=true;
                j= arrpos [j][1];
                cycle_size++
            }
            if(cycle_size > 0){
                ans += (cycle_size -1);
            }
        }
        return ans;
}

